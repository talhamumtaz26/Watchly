import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import { MdLocalMovies } from 'react-icons/md';
import { FiSearch } from 'react-icons/fi';

const Navbar = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const { currentUser, logout } = useAuth();
  const toast = useToast();
  const [showUserMenu, setShowUserMenu] = useState(false);
  const [showMobileMenu, setShowMobileMenu] = useState(false);

  const handleLogout = async () => {
    try {
      await logout();
      navigate('/login');
      setShowMobileMenu(false);
    } catch (error) {
      console.error('Logout error:', error);
      toast.error('Failed to logout');
    }
  };

  const navLinks = [
    { path: '/', label: 'Home', icon: FiHome },
    { path: '/upcoming', label: 'Upcoming', icon: FiClock },
    { path: '/watch-later', label: 'Watchlist', icon: FiBookmark },
    { path: '/watched', label: 'Watched', icon: FiCheckCircle },
    { path: '/dashboard', label: 'Dashboard', icon: FiBarChart2 },
    { path: '/settings', label: 'Settings', icon: FiSettings },
  ];

  const isActive = (path) => {
    return location.pathname === path;
  };

  return (
    <>
      <nav className="bg-background-darker dark:bg-background-darker shadow-2xl sticky top-0 z-40 backdrop-blur-custom border-b border-white/5">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            {/* Left Section: Logo Only */}
            <div className="flex items-center gap-3">
              {/* Logo */}
              <Link to="/" className="flex items-center space-x-2 group">
                <div className="bg-gradient-purple p-2 rounded-xl shadow-purple group-hover:scale-110 transition-transform duration-300">
                  <MdLocalMovies className="text-2xl text-white" />
                </div>
                <span className="text-2xl font-display font-bold bg-gradient-to-r from-accent-purple to-accent-blue bg-clip-text text-transparent">
                  Watchly
                </span>
              </Link>
            </div>

          {/* Navigation Links */}
          <div className="hidden md:flex items-center space-x-2">
            {navLinks.map((link) => {
              const Icon = link.icon;
              return (
                <Link
                  key={link.path}
                  to={link.path}
                  className={`px-4 py-2 rounded-xl transition-all duration-300 flex items-center space-x-2 ${
                    isActive(link.path)
                      ? 'bg-gradient-purple text-white shadow-purple scale-105'
                      : 'text-text-muted hover:text-text-dark hover:bg-card-dark'
                  }`}
                >
                  <Icon className="text-lg" />
                  <span className="font-medium text-sm">{link.label}</span>
                </Link>
              );
            })}
          </div>

          {/* Right Section: Desktop Menu + User, Mobile Menu Button + Theme */}
          <div className="flex items-center gap-3">
            {/* Mobile Menu Button */}
            <button
              onClick={() => setShowMobileMenu(!showMobileMenu)}
              className="md:hidden text-white p-2 hover:bg-card-dark rounded-lg transition-colors"
              aria-label="Toggle menu"
            >
              {showMobileMenu ? (
                <FiX className="text-2xl" />
              ) : (
                <FiMenu className="text-2xl" />
              )}
            </button>

            {/* Desktop User Profile */}
            {currentUser && (
              <div className="relative hidden md:block">
                <button
                  onClick={() => setShowUserMenu(!showUserMenu)}
                  className="flex items-center gap-2 px-4 py-2 rounded-xl bg-card-dark hover:bg-card-darker border border-white/10 transition-all"
                >
                  <FiUser className="text-accent-purple" />
                  <span className="text-sm font-medium text-white">
                    {currentUser.email?.split('@')[0]}
                  </span>
                </button>

                {/* User Dropdown Menu */}
                {showUserMenu && (
                  <div className="absolute right-0 mt-2 w-56 bg-card-darker rounded-xl shadow-card-hover border border-white/10 overflow-hidden z-50">
                    <div className="px-4 py-3 border-b border-white/10">
                      <p className="text-xs text-text-muted">Signed in as</p>
                      <p className="text-sm font-semibold text-white truncate">
                        {currentUser.email}
                      </p>
                    </div>
                    <button
                      onClick={handleLogout}
                      className="w-full px-4 py-3 text-left text-sm text-red-400 hover:bg-card-dark transition-colors flex items-center gap-2"
                    >
                      <FiLogOut />
                      Logout
                    </button>
                  </div>
                )}
              </div>
            )}

            {/* Desktop Login Button */}
            {!currentUser && (
              <Link
                to="/login"
                className="hidden md:flex px-4 py-2 rounded-xl bg-gradient-purple text-white font-semibold hover:shadow-purple transition-all items-center gap-2"
              >
                <FiUser />
                <span>Login</span>
              </Link>
            )}

            <ThemeToggle />
          </div>
        </div>
        </div>
      </nav>

      {/* Mobile Slide-out Menu Drawer - Outside nav for proper z-index */}
      {showMobileMenu && (
        <>
          {/* Backdrop */}
          <div
            className="fixed inset-0 bg-black/70 backdrop-blur-sm z-[999] md:hidden"
            onClick={() => setShowMobileMenu(false)}
          ></div>

          {/* Drawer - Slide from RIGHT */}
          <div className="fixed top-0 right-0 bottom-0 w-72 bg-background-darker shadow-2xl z-[1000] md:hidden overflow-y-auto animate-slide-in-right border-l border-white/10">
            {/* Header */}
            <div className="p-5 border-b border-white/10 bg-gradient-purple">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <div className="bg-white/20 p-2 rounded-xl">
                    <MdLocalMovies className="text-xl text-white" />
                  </div>
                  <span className="text-xl font-display font-bold text-white">
                    Watchly
                  </span>
                </div>
                <button
                  onClick={() => setShowMobileMenu(false)}
                  className="text-white/80 hover:text-white p-2 hover:bg-white/10 rounded-lg transition-colors"
                >
                  <FiX className="text-xl" />
                </button>
              </div>
            </div>

            {/* User Profile Section */}
            {currentUser && (
              <div className="p-5 border-b border-white/10">
                <div className="flex items-center gap-3">
                  <div className="w-12 h-12 rounded-full bg-gradient-purple flex items-center justify-center flex-shrink-0">
                    <FiUser className="text-white text-lg" />
                  </div>
                  <div className="min-w-0 flex-1">
                    <p className="text-xs text-text-muted">Signed in as</p>
                    <p className="text-white font-semibold truncate text-sm">
                      {currentUser.email}
                    </p>
                  </div>
                </div>
              </div>
            )}

            {/* Menu Items */}
            <div className="p-4">
              <nav className="space-y-1">
                {navLinks.map((link) => {
                  const Icon = link.icon;
                  return (
                    <Link
                      key={link.path}
                      to={link.path}
                      onClick={() => setShowMobileMenu(false)}
                      className={`flex items-center gap-3 px-4 py-3 rounded-lg transition-all ${
                        isActive(link.path)
                          ? 'bg-gradient-purple text-white shadow-purple'
                          : 'text-text-muted hover:text-white hover:bg-card-dark'
                      }`}
                    >
                      <Icon className="text-lg" />
                      <span className="font-medium text-sm">{link.label}</span>
                    </Link>
                  );
                })}
              </nav>
            </div>

            {/* Bottom Actions */}
            <div className="p-4 border-t border-white/10 mt-auto">
              {currentUser ? (
                <button
                  onClick={handleLogout}
                  className="w-full flex items-center gap-2 px-4 py-3 rounded-lg text-red-400 hover:bg-red-500/10 transition-all font-medium text-sm"
                >
                  <FiLogOut className="text-lg" />
                  <span>Logout</span>
                </button>
              ) : (
                <Link
                  to="/login"
                  onClick={() => setShowMobileMenu(false)}
                  className="w-full flex items-center justify-center gap-2 px-4 py-3 rounded-lg bg-gradient-purple text-white font-medium text-sm hover:shadow-purple transition-all"
                >
                  <FiUser className="text-lg" />
                  <span>Login</span>
                </Link>
              )}
            </div>
          </div>
        </>
      )}
    </>
  );
};

export default Navbar;
